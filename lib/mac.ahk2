; MIT License
; Copyright (c) 2021 Kosaki Mezumona
#UseHook
#include "commands.ahk2"

class MacSimulator
{
	static Instance[]
	{
		get
		{
			static instance := MacSimulator.New()
			return instance
		}
	}

	IgnoredWindowMatcher[]
	{
		get
		{
			if (!this._ignoredWindowMatcher)
			{
				this._ignoredWindowMatcher := WindowMatcher.New()
			}
			return this._ignoredWindowMatcher
		}
		set
		{
			this._ignoredWindowMatcher := value
		}
	}

	__New()
	{
		this._commandKeyDown := false
		this._taskSwitching := false
		this._ignoredWindowMatcher := ""
	}

	RegisterKeybinds(commandKey)
	{
		HotIf((*) => this.IsAbleToOverrideKeys())

		HotKey("*" . commandKey, (*) => this.OnCommandKeyDown())
		HotKey("*" . commandKey . " Up", (*) => this.OnCommandKeyUp())
		HotKey("Tab", (*) => this.OnTabKeyDown())
		HotKey("*+vkDB", (*) => this.OnShiftOpenBracketDown())
		HotKey("*+vkDD", (*) => this.OnShiftCloseBracketDown())
		HotKey("*+vk33", (*) => this.OnShiftThreeDown())
		HotKey("*+vk34", (*) => this.OnShiftFourDown())
		HotKey("*+vk35", (*) => this.OnShiftFiveDown())
		HotKey("vkE2", (*) => Send("_"))
		HotKey("<^Up", (*) => Send("{RWin Down}{Tab}{RWin Up}"))
		HotKey("<^Left", (*) => Send("{Blind}{RWin Down}{Left}{RWin Up}"))
		HotKey("<^Right", (*) => Send("{Blind}{RWin Down}{Right}{RWin Up}"))

		HotIf()
	}

	IsAbleToOverrideKeys() => !(this._ignoredWindowMatcher && this._ignoredWindowMatcher.MatchActive())

	OnCommandKeyDown()
	{
		if (!this._commandKeyDown)
		{
			Send("{Blind}{RCtrl Down}")
			this._commandKeyDown := true
		}
	}

	OnCommandKeyUp()
	{
		if (this._commandKeyDown)
		{
			if (this._taskSwitching)
			{
				Send("{Blind}{RAlt Up}")
			}
			else
			{
				Send("{Blind}{RCtrl Up}")
			}
		}
		this._commandKeyDown := false
		this._taskSwitching := false
	}

	OnTabKeyDown()
	{
		if (this._commandKeyDown && !this._taskSwitching)
		{
			Send("{Blind}{RCtrl Up}{RAlt Down}")
			this._taskSwitching := true
		}
		Send("{Blind}{Tab}")
	}

	OnShiftOpenBracketDown()
	{
		if (this._commandKeyDown)
		{
			Send("{Shift Down}{Tab}{Shift Up}")
		}
		else
		{
			Send("{Blind}{vkDB}")
		}
	}

	OnShiftCloseBracketDown()
	{
		if (this._commandKeyDown)
		{
			Send("{Ctrl}{Tab}")
		}
		else
		{
			Send("{Blind}{vkDD}")
		}
	}

	OnShiftThreeDown()
	{
		if (this._commandKeyDown)
		{
			Commands.CaptureScreen()
		}
		else
		{
			Send("{Blind}{vk33}")
		}
	}

	OnShiftFourDown()
	{
		if (this._commandKeyDown)
		{
			Commands.CaptureActiveWindow()
		}
		else
		{
			Send("{Blind}{vk34}")
		}
	}

	OnShiftFiveDown()
	{
		if (this._commandKeyDown)
		{
			Commands.ShowScreenShotTool()
		}
		else
		{
			Send("{Blind}{vk35}")
		}
	}
}
