; MIT License
; Copyright (c) 2020 Kosaki Mezumona
#Include "commands.ahk2"
#UseHook

~LWin::
{
	Mac.Instance.OnLWinKeyDown()
}

~LWin Up::
{
	Mac.Instance.OnLWinKeyUp()
}

*<#Tab::
{
	Mac.Instance.OnWinKeyTabDown()
}

class Mac
{
	static Instance[]
	{
		get
		{
			static instance := Mac.New()
			return instance
		}
	}

	__New()
	{
		this._taskSwitchable := false
		this._taskSwitching := false
		this._disableWinKeyStartMenu := false
	}

	RegisterKeybinds()
	{
		this.DisableWinKeyStartMenu()
		this.WinKeyToTaskSwitch()
		this.WinKeyToCtrl()
	}

	DisableWinKeyStartMenu()
	{
		this._disableWinKeyStartMenu := true
	}

	WinKeyToTaskSwitch()
	{
		this._taskSwitchable := true
	}

	WinKeyToCtrl()
	{
		static keynames := [
			"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o",
			"p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
			"0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
			"vk08", "vk0D",
			"vk20", "vk21", "vk22", "vk23", "vk24", "vk25", "vk26", "vk27", "vk28", "vk2C", "vk2D", "vk2E",
			"vk60", "vk61", "vk62", "vk63", "vk64", "vk65", "vk66", "vk67", "vk68",
			"vk69", "vk6A", "vk6B", "vk6C", "vk6D", "vk6E", "vk6F",
			"vk70", "vk71", "vk72", "vk73", "vk74", "vk75", "vk76", "vk77", "vk78",
			"vk79", "vk7A", "vk7B", "vk7C", "vk7D", "vk7E", "vk7F",
			"vk80", "vk81", "vk82", "vk83", "vk84", "vk85", "vk86", "vk87",
			"vkBA", "vkBB", "vkBC", "vkBD", "vkBE", "vkBF", "vkC0",
			"vkDB", "vkDC", "vkDD", "vkDE", "vkDF", "vkE2",
		]

		RemapKey := (remapped, key) => Send(remapped)
		
		for keyname in keynames
		{
			remapped := keyname
			if (SubStr(keyname, 1, 2) == "vk")
			{
				remapped := "{" . keyname . "}"
			}
			HotKey("<#" . keyname, RemapKey.Bind("^" . remapped))
			HotKey("<#!" . keyname, RemapKey.Bind("^!" . remapped))
			HotKey("<#+" . keyname, RemapKey.Bind("^+" . remapped))
			HotKey("<#!+" . keyname, RemapKey.Bind("^!+" . remapped))
		}

		SwitchNextTab := (name) => Commands.SwitchNextTab()
		SwitchPrevTab := (name) => Commands.SwitchPrevTab()

		; Shift+Cmd+[ & Shift+Cmd+]
		HotKey("<#+vkDB", SwitchPrevTab)
		HotKey("<#+vkDD", SwitchNextTab)
	}

	OnLWinKeyDown()
	{
		if (this._disableWinKeyStartMenu)
		{
			Send("{vkFF}")
		}
	}

	OnLWinKeyUp()
	{
		if (this._taskSwitching)
		{
			Send("{Alt Up}")
			this._taskSwitching := false
		}
	}

	OnWinKeyTabDown()
	{
		if (!this._taskSwitchable)
		{
			return
		}

		if (!this._taskSwitching)
		{
			Send("{Alt Down}")
			this._taskSwitching := true
		}
		if (GetKeyState("Shift", "P"))
		{
			Send("{Shift Down}{Tab}{Shift Up}")
		}
		else
		{
			Send("{Tab}")
		}
	}
}
