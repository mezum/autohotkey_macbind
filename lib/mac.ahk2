; MIT License
; Copyright (c) 2020 Kosaki Mezumonax
#UseHook
#include "commands.ahk2"

class Mac
{
	static Instance[]
	{
		get
		{
			static instance := Mac.New()
			return instance
		}
	}

	__New()
	{
		this._keyDown := false
		this._taskSwitching := false
	}

	RegisterKeybinds(commandKey)
	{
		OnCommandKeyDown := (*) => this.OnCommandKeyDown()
		OnCommandKeyUp := (*) => this.OnCommandKeyUp()
		OnTabKeyDown := (*) => this.OnTabKeyDown()
		OnShiftOpenBracketDown := (*) => this.OnShiftOpenBracketDown()
		OnShiftCloseBracketDown := (*) => this.OnShiftCloseBracketDown()
		HotKey("*" . commandKey, OnCommandKeyDown)
		HotKey("*" . commandKey . " Up", OnCommandKeyUp)
		HotKey("Tab", OnTabKeyDown)
		HotKey("*+vkDB", OnShiftOpenBracketDown)
		HotKey("*+vkDD", OnShiftCloseBracketDown)
	}

	OnCommandKeyDown()
	{
		if (!this._keyDown)
		{
			Send("{Blind}{RCtrl Down}")
			this._keyDown := true
		}
	}

	OnCommandKeyUp()
	{
		if (this._keyDown)
		{
			if (this._taskSwitching)
			{
				Send("{Blind}{RAlt Up}")
			}
			else
			{
				Send("{Blind}{RCtrl Up}")
			}
		}
		this._keyDown := false
		this._taskSwitching := false
	}

	OnTabKeyDown()
	{
		if (this._keyDown && !this._taskSwitching)
		{
			Send("{Blind}{RCtrl Up}{RAlt Down}")
			this._taskSwitching := true
		}
		Send("{Blind}{Tab}")
	}

	OnShiftOpenBracketDown()
	{
		if (this._keyDown)
		{
			Send("{Shift Down}{Tab}{Shift Up}")
		}
		else
		{
			Send("{Blind}{vkDD}")
		}
	}

	OnShiftCloseBracketDown()
	{
		if (this._keyDown)
		{
			Send("{Ctrl}{Tab}")
		}
		else
		{
			Send("{Blind}{vkDB}")
		}
	}
}
